
퍼셉트론 -> 신경망의 변화
 기존 방법은 수치를 일일이 설정해주어야함. (w1, w2등을 직접 설정해서 직선을 만듬). 그러나 이 과정이 자동으로 될 필요성이 생기면서 신경망 모델을 사용.

단층 퍼셉트론 - 단순 퍼셉트론에 입력값으로 가중치 합을 구한 다음 계단함수를 활성화 함수로 사용하는 모델
다층 퍼셉트론 - 다층 퍼셉트론에 활성화함수를 시그모이드같은 매끄러운 함수를 사용하는 모델

선형함수 : 어떤 값을 넣었을 때, 상수배만큼 변하는 함수
비선형함수 : 선형 함수 외 함수

신경망에서 행렬곱이 중요한 이유 :
 입력과 가중치의 곱의 합을 구하는데, 행렬곱을 쓰지 않으면 일일이 곱하고 더하는 반복문을 써야함. 반면, 행렬곱이면 한줄로 요약 뚝딱임.

행렬식 표현할 때 xw 와 xw의 차이 :
wx는 열벡터를 기준으로 나타낸것, xw는 행벡터를 기준으로 나타낸것

소프트맥스에서 수 계산 개선 방법
 mp.exp를 이용한 지수함수로 이루어져있는데, 입력된 수가 조금만 바뀌어도 큰 변화가 일어나게 된다. 
 수가 크다보니 연산시 오버플로우가 발생할 수 있디. 분수꼴은 위아래에 같은 수를 곱해도 동일하는다는 성질을 이용해 exp 지수에 적당한 수를 빼주어서 지수 값을 작게 만들면서도 동일한 값을 얻어내게 된다.

분류라도 소프트맥스함수를 쓰지 않는다!
 소프트맥스함수는 단조증가함수이다. 
 즉, 큰 입력값을 받으면 큰 확률을 내뱉는 함수. 그래서 입력값 중 가장 큰 값을 선택하는것이 결국 확률이 가장 높은 값을 선택하는것이다. 
 따라서 소프트맥스를 사용하지 않아도 동일한 결과를 얻을 수 있으며, 계산에 들어가는 자원을 아낄수도 있다. 
 

정규화(normalization)
 데이터를 특정 범위로 변환하는 처리
 예를들면 0~255 값을 0~1사이 값을 바꿔버리기
 
배치 계산을 사용하는 이유
 1. 대부분의 수치 라이브러리는 큰 배열을 효율적으로 처리하도록 회적화되어이씀
 2. 데이터 전송 속도에 비에 처리 속도가 훨씬 빠르다
 
 위 2가지 이유로 적은 양을 자주 계산하는것보다, 큰것을 한번에 처리하는것이 더 효율적이기 때문이다.
 
